@using SmartCode
@using SmartCode.Generator.Extensions
@model BuildContext
@{
    Layout = "_CSharpLayout.cshtml";
    var project = Model.Project;
    var buildTask = Model.Build;
    var table = Model.GetCurrentTable();
}

@functions {
public string ConvertLangType(SmartCode.Generator.Entity.Column column)
{
    if (String.IsNullOrEmpty(column.LanguageType))
    {
        return "NAType";
    }
    if (!column.IsNullable)
    {
        return column.LanguageType;
    }

    if (column.LanguageType.Contains("[]") || column.LanguageType.ToLower() == "string")
    {
        return column.LanguageType;
    }
    return $"{column.LanguageType}?";
}

}

using System;
namespace @(project.Module).@buildTask.Module
{

    @table.GetCSharpSummary()
    public class @table.ConvertedName
    {
    @foreach (var column in table.Columns)
    {

        @column.GetCSharpSummary()
        @Html.NewLine()     
        <text>public virtual</text> <text>@(ConvertLangType(column))</text> <text>@column.ConvertedName</text> <text>{ get; set; }</text>
        @Html.NewLine()                                                                                                                 
    }
    }
    }
